<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="2.7.1" version="1.0">
  This file is intended to be loaded by Logisim (http://www.cburch.com/logisim/).

  <lib desc="#Wiring" name="0">
    <tool name="Constant">
      <a name="facing" val="south"/>
      <a name="value" val="0x0"/>
    </tool>
  </lib>
  <lib desc="#Gates" name="1"/>
  <lib desc="#Base" name="2">
    <tool name="Text Tool">
      <a name="text" val=""/>
      <a name="font" val="SansSerif plain 12"/>
      <a name="halign" val="center"/>
      <a name="valign" val="base"/>
    </tool>
  </lib>
  <main name="ParityGenerator"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
  </options>
  <mappings>
    <tool lib="2" map="Button2" name="Menu Tool"/>
    <tool lib="2" map="Button3" name="Menu Tool"/>
    <tool lib="2" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="2" name="Poke Tool"/>
    <tool lib="2" name="Edit Tool"/>
    <tool lib="2" name="Text Tool">
      <a name="text" val=""/>
      <a name="font" val="SansSerif plain 12"/>
      <a name="halign" val="center"/>
      <a name="valign" val="base"/>
    </tool>
    <sep/>
    <tool lib="0" name="Pin">
      <a name="facing" val="south"/>
    </tool>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </tool>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
  </toolbar>
  <circuit name="XOR">
    <a name="circuit" val="XOR"/>
    <a name="clabel" val=""/>
    <a name="clabelup" val="east"/>
    <a name="clabelfont" val="SansSerif plain 12"/>
    <appear>
      <circ-port height="10" pin="490,420" width="10" x="95" y="65"/>
      <circ-port height="8" pin="140,310" width="8" x="86" y="46"/>
      <circ-port height="8" pin="70,310" width="8" x="66" y="46"/>
      <path d="M71,51 Q75,61 79,51" fill="none" stroke="#808080" stroke-width="2"/>
      <rect fill="none" height="30" stroke="#000000" stroke-width="2" width="50" x="50" y="50"/>
      <circ-anchor facing="east" height="6" width="6" x="97" y="57"/>
    </appear>
    <wire from="(400,420)" to="(490,420)"/>
    <wire from="(70,510)" to="(230,510)"/>
    <wire from="(70,310)" to="(70,410)"/>
    <wire from="(70,410)" to="(70,510)"/>
    <wire from="(290,390)" to="(320,390)"/>
    <wire from="(320,420)" to="(350,420)"/>
    <wire from="(70,410)" to="(190,410)"/>
    <wire from="(330,430)" to="(350,430)"/>
    <wire from="(140,460)" to="(190,460)"/>
    <wire from="(330,430)" to="(330,470)"/>
    <wire from="(220,410)" to="(240,410)"/>
    <wire from="(220,460)" to="(240,460)"/>
    <wire from="(230,490)" to="(240,490)"/>
    <wire from="(230,490)" to="(230,510)"/>
    <wire from="(140,370)" to="(140,460)"/>
    <wire from="(320,390)" to="(320,420)"/>
    <wire from="(290,470)" to="(330,470)"/>
    <wire from="(140,310)" to="(140,370)"/>
    <wire from="(140,370)" to="(240,370)"/>
    <comp lib="1" loc="(220,410)" name="NOT Gate"/>
    <comp lib="0" loc="(70,310)" name="Pin">
      <a name="facing" val="south"/>
      <a name="tristate" val="false"/>
      <a name="label" val="X"/>
    </comp>
    <comp lib="1" loc="(400,420)" name="OR Gate"/>
    <comp lib="1" loc="(290,390)" name="AND Gate"/>
    <comp lib="1" loc="(290,470)" name="AND Gate"/>
    <comp lib="0" loc="(140,310)" name="Pin">
      <a name="facing" val="south"/>
      <a name="tristate" val="false"/>
      <a name="label" val="Y"/>
    </comp>
    <comp lib="0" loc="(490,420)" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="tristate" val="false"/>
    </comp>
    <comp lib="2" loc="(314,250)" name="Text">
      <a name="text" val="Use minterm expansion to create an XOR gate using AND + OR gates"/>
    </comp>
    <comp lib="1" loc="(220,460)" name="NOT Gate"/>
  </circuit>
  <circuit name="ParityGenerator">
    <a name="circuit" val="ParityGenerator"/>
    <a name="clabel" val=""/>
    <a name="clabelup" val="east"/>
    <a name="clabelfont" val="SansSerif plain 12"/>
    <wire from="(280,260)" to="(280,330)"/>
    <wire from="(380,340)" to="(380,410)"/>
    <wire from="(500,370)" to="(560,370)"/>
    <wire from="(130,260)" to="(130,330)"/>
    <wire from="(130,260)" to="(190,260)"/>
    <wire from="(140,430)" to="(450,430)"/>
    <wire from="(510,380)" to="(560,380)"/>
    <wire from="(380,340)" to="(430,340)"/>
    <wire from="(140,410)" to="(250,410)"/>
    <wire from="(130,330)" to="(130,350)"/>
    <wire from="(140,410)" to="(140,430)"/>
    <wire from="(500,340)" to="(500,370)"/>
    <wire from="(260,320)" to="(260,350)"/>
    <wire from="(150,250)" to="(190,250)"/>
    <wire from="(240,260)" to="(280,260)"/>
    <wire from="(260,350)" to="(300,350)"/>
    <wire from="(90,310)" to="(190,310)"/>
    <wire from="(60,250)" to="(90,250)"/>
    <wire from="(90,250)" to="(120,250)"/>
    <wire from="(350,340)" to="(380,340)"/>
    <wire from="(380,410)" to="(410,410)"/>
    <wire from="(280,330)" to="(300,330)"/>
    <wire from="(480,340)" to="(500,340)"/>
    <wire from="(130,330)" to="(150,330)"/>
    <wire from="(510,380)" to="(510,420)"/>
    <wire from="(240,320)" to="(260,320)"/>
    <wire from="(440,410)" to="(450,410)"/>
    <wire from="(60,430)" to="(140,430)"/>
    <wire from="(500,420)" to="(510,420)"/>
    <wire from="(280,410)" to="(360,410)"/>
    <wire from="(180,330)" to="(190,330)"/>
    <wire from="(360,350)" to="(360,410)"/>
    <wire from="(610,380)" to="(690,380)"/>
    <wire from="(60,350)" to="(130,350)"/>
    <wire from="(90,250)" to="(90,310)"/>
    <wire from="(360,350)" to="(430,350)"/>
    <comp lib="1" loc="(480,340)" name="AND Gate"/>
    <comp lib="1" loc="(610,380)" name="OR Gate"/>
    <comp lib="2" loc="(540,57)" name="Text">
      <a name="text" val="the output = 1 if an odd number of inputs (1 or 3) are 1, otherwise 0"/>
    </comp>
    <comp lib="0" loc="(60,250)" name="Pin">
      <a name="tristate" val="false"/>
      <a name="label" val="X"/>
    </comp>
    <comp lib="1" loc="(240,260)" name="AND Gate"/>
    <comp lib="2" loc="(50,201)" name="Text">
      <a name="text" val="Input Bits"/>
    </comp>
    <comp lib="2" loc="(497,68)" name="Text"/>
    <comp lib="1" loc="(440,410)" name="NOT Gate"/>
    <comp lib="1" loc="(240,320)" name="AND Gate"/>
    <comp lib="1" loc="(350,340)" name="OR Gate"/>
    <comp lib="0" loc="(690,380)" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="tristate" val="false"/>
      <a name="label" val="Parity"/>
    </comp>
    <comp lib="2" loc="(572,109)" name="Text">
      <a name="text" val="WRITE YOUR NAME AND PLEDGE SOMEWHERE IN THIS CIRCUIT"/>
    </comp>
    <comp lib="1" loc="(280,410)" name="NOT Gate"/>
    <comp lib="2" loc="(688,349)" name="Text">
      <a name="text" val="Output Bit"/>
    </comp>
    <comp lib="0" loc="(60,430)" name="Pin">
      <a name="tristate" val="false"/>
      <a name="label" val="Z"/>
    </comp>
    <comp lib="1" loc="(180,330)" name="NOT Gate"/>
    <comp lib="2" loc="(523,27)" name="Text">
      <a name="text" val="Write your parity circuit here"/>
    </comp>
    <comp lib="0" loc="(60,350)" name="Pin">
      <a name="tristate" val="false"/>
      <a name="label" val="Y"/>
    </comp>
    <comp lib="2" loc="(568,156)" name="Text">
      <a name="text" val="I pledge my honor that I have abided by the Stevens Honor System"/>
    </comp>
    <comp lib="1" loc="(150,250)" name="NOT Gate"/>
    <comp lib="2" loc="(428,132)" name="Text">
      <a name="text" val="Julian Noeske"/>
    </comp>
    <comp lib="1" loc="(500,420)" name="AND Gate"/>
    <comp lib="2" loc="(554,78)" name="Text">
      <a name="text" val="ONLY use: NOT, AND, OR, and any custom functions you write (included in the .circ submission)"/>
    </comp>
  </circuit>
</project>
